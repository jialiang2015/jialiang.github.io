<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2014-2020书单</title>
      <link href="/2020/01/30/2014-2020-shu-dan/"/>
      <url>/2020/01/30/2014-2020-shu-dan/</url>
      
        <content type="html"><![CDATA[<h2 id="网络小说："><a href="#网络小说：" class="headerlink" title="网络小说："></a>网络小说：</h2><h3 id="1-诛仙"><a href="#1-诛仙" class="headerlink" title="1. 诛仙"></a>1. 诛仙</h3><h3 id="2-黑暗王者—–古羲"><a href="#2-黑暗王者—–古羲" class="headerlink" title="2. 黑暗王者—–古羲"></a>2. 黑暗王者—–古羲</h3><h3 id="3-斗破苍穹"><a href="#3-斗破苍穹" class="headerlink" title="3. 斗破苍穹"></a>3. 斗破苍穹</h3><h3 id="4-斗罗大陆"><a href="#4-斗罗大陆" class="headerlink" title="4. 斗罗大陆"></a>4. 斗罗大陆</h3><h3 id="5-择天记"><a href="#5-择天记" class="headerlink" title="5. 择天记"></a>5. 择天记</h3><h3 id="6-剑仙神曲—–牛语者"><a href="#6-剑仙神曲—–牛语者" class="headerlink" title="6. 剑仙神曲—–牛语者"></a>6. 剑仙神曲—–牛语者</h3><h2 id="文学-小说-："><a href="#文学-小说-：" class="headerlink" title="文学(小说)："></a>文学(小说)：</h2><h3 id="1-平凡的世界—–路遥"><a href="#1-平凡的世界—–路遥" class="headerlink" title="1. 平凡的世界—–路遥"></a>1. 平凡的世界—–路遥</h3><h3 id="2-岛上书店"><a href="#2-岛上书店" class="headerlink" title="2. 岛上书店"></a>2. 岛上书店</h3><h3 id="3-玛格丽特小镇"><a href="#3-玛格丽特小镇" class="headerlink" title="3. 玛格丽特小镇"></a>3. 玛格丽特小镇</h3><h3 id="4-生死场—–萧红"><a href="#4-生死场—–萧红" class="headerlink" title="4. 生死场—–萧红"></a>4. 生死场—–萧红</h3><h3 id="5-芳华—–严歌苓"><a href="#5-芳华—–严歌苓" class="headerlink" title="5. 芳华—–严歌苓"></a>5. 芳华—–严歌苓</h3><h3 id="6-教父"><a href="#6-教父" class="headerlink" title="6. 教父"></a>6. 教父</h3><h3 id="7-我与地坛—–史铁生"><a href="#7-我与地坛—–史铁生" class="headerlink" title="7. 我与地坛—–史铁生"></a>7. 我与地坛—–史铁生</h3><h3 id="8-一个人的朝圣"><a href="#8-一个人的朝圣" class="headerlink" title="8. 一个人的朝圣"></a>8. 一个人的朝圣</h3><h3 id="9-动物农场"><a href="#9-动物农场" class="headerlink" title="9. 动物农场"></a>9. 动物农场</h3><h3 id="10-城南旧事—–林海音"><a href="#10-城南旧事—–林海音" class="headerlink" title="10. 城南旧事—–林海音"></a>10. 城南旧事—–林海音</h3><h3 id="11-了不起的盖茨比"><a href="#11-了不起的盖茨比" class="headerlink" title="11. 了不起的盖茨比"></a>11. 了不起的盖茨比</h3><h3 id="12-无声告白"><a href="#12-无声告白" class="headerlink" title="12. 无声告白"></a>12. 无声告白</h3><h3 id="13-白鹿原—–陈忠实"><a href="#13-白鹿原—–陈忠实" class="headerlink" title="13. 白鹿原—–陈忠实"></a>13. 白鹿原—–陈忠实</h3><h3 id="14-目送—–龙应台"><a href="#14-目送—–龙应台" class="headerlink" title="14. 目送—–龙应台"></a>14. 目送—–龙应台</h3><h3 id="15-撒哈拉的故事—–三毛"><a href="#15-撒哈拉的故事—–三毛" class="headerlink" title="15. 撒哈拉的故事—–三毛"></a>15. 撒哈拉的故事—–三毛</h3><h3 id="16-海底两万里"><a href="#16-海底两万里" class="headerlink" title="16. 海底两万里"></a>16. 海底两万里</h3><h3 id="17-我们仨—–杨绛"><a href="#17-我们仨—–杨绛" class="headerlink" title="17. 我们仨—–杨绛"></a>17. 我们仨—–杨绛</h3><h3 id="18-情书—–岩井俊二"><a href="#18-情书—–岩井俊二" class="headerlink" title="18. 情书—–岩井俊二"></a>18. 情书—–岩井俊二</h3><h3 id="19-长安十二时辰-上下-—–马伯庸"><a href="#19-长安十二时辰-上下-—–马伯庸" class="headerlink" title="19. 长安十二时辰(上下)—–马伯庸"></a>19. 长安十二时辰(上下)—–马伯庸</h3><h3 id="11-魔球—–东野圭吾"><a href="#11-魔球—–东野圭吾" class="headerlink" title="11. 魔球—–东野圭吾"></a>11. 魔球—–东野圭吾</h3><h3 id="12-流星之绊—–东野圭吾"><a href="#12-流星之绊—–东野圭吾" class="headerlink" title="12. 流星之绊—–东野圭吾"></a>12. 流星之绊—–东野圭吾</h3><h3 id="13-解忧杂货店—–东野圭吾"><a href="#13-解忧杂货店—–东野圭吾" class="headerlink" title="13. 解忧杂货店—–东野圭吾"></a>13. 解忧杂货店—–东野圭吾</h3><h3 id="14-拉普拉斯的魔女—–东野圭吾"><a href="#14-拉普拉斯的魔女—–东野圭吾" class="headerlink" title="14. 拉普拉斯的魔女—–东野圭吾"></a>14. 拉普拉斯的魔女—–东野圭吾</h3><h3 id="15-嫌疑人X的献身—–东野圭吾"><a href="#15-嫌疑人X的献身—–东野圭吾" class="headerlink" title="15. 嫌疑人X的献身—–东野圭吾"></a>15. 嫌疑人X的献身—–东野圭吾</h3><h3 id="16-白夜行—–东野圭吾"><a href="#16-白夜行—–东野圭吾" class="headerlink" title="16. 白夜行—–东野圭吾"></a>16. 白夜行—–东野圭吾</h3><h3 id="17-追风筝的人"><a href="#17-追风筝的人" class="headerlink" title="17. 追风筝的人"></a>17. 追风筝的人</h3><h3 id="18-看见—–柴静"><a href="#18-看见—–柴静" class="headerlink" title="18. 看见—–柴静"></a>18. 看见—–柴静</h3><h3 id="19-世界上的另一个你—–霍尔"><a href="#19-世界上的另一个你—–霍尔" class="headerlink" title="19. 世界上的另一个你—–霍尔"></a>19. 世界上的另一个你—–霍尔</h3><h3 id="20-活着—–余华"><a href="#20-活着—–余华" class="headerlink" title="20. 活着—–余华"></a>20. 活着—–余华</h3><h3 id="21-兄弟—–余华"><a href="#21-兄弟—–余华" class="headerlink" title="21. 兄弟—–余华"></a>21. 兄弟—–余华</h3><h3 id="22-许三观卖血记—–余华"><a href="#22-许三观卖血记—–余华" class="headerlink" title="22. 许三观卖血记—–余华"></a>22. 许三观卖血记—–余华</h3><h3 id="23-偷影子的人"><a href="#23-偷影子的人" class="headerlink" title="23. 偷影子的人"></a>23. 偷影子的人</h3><h3 id="24-朝花夕拾—–鲁迅"><a href="#24-朝花夕拾—–鲁迅" class="headerlink" title="24. 朝花夕拾—–鲁迅"></a>24. 朝花夕拾—–鲁迅</h3><h2 id="IT科技："><a href="#IT科技：" class="headerlink" title="IT科技："></a>IT科技：</h2><h3 id="1-人工智能—–李开复"><a href="#1-人工智能—–李开复" class="headerlink" title="1.人工智能—–李开复"></a>1.人工智能—–李开复</h3><h3 id="2-智能时代—–吴军"><a href="#2-智能时代—–吴军" class="headerlink" title="2. 智能时代—–吴军"></a>2. 智能时代—–吴军</h3><h3 id="3-浪潮之巅—–吴军"><a href="#3-浪潮之巅—–吴军" class="headerlink" title="3. 浪潮之巅—–吴军"></a>3. 浪潮之巅—–吴军</h3><h2 id="金融类型："><a href="#金融类型：" class="headerlink" title="金融类型："></a>金融类型：</h2><h3 id="1-对冲基金到底是什么"><a href="#1-对冲基金到底是什么" class="headerlink" title="1. 对冲基金到底是什么"></a>1. 对冲基金到底是什么</h3><h3 id="2-货币战争"><a href="#2-货币战争" class="headerlink" title="2. 货币战争"></a>2. 货币战争</h3><h2 id="外语："><a href="#外语：" class="headerlink" title="外语："></a>外语：</h2><h2 id="历史："><a href="#历史：" class="headerlink" title="历史："></a>历史：</h2><h2 id="动漫："><a href="#动漫：" class="headerlink" title="动漫："></a>动漫：</h2><h2 id="传记："><a href="#传记：" class="headerlink" title="传记："></a>传记：</h2><h3 id="1-特朗普自传：从商人到参选总统"><a href="#1-特朗普自传：从商人到参选总统" class="headerlink" title="1.特朗普自传：从商人到参选总统"></a>1.特朗普自传：从商人到参选总统</h3><h2 id="艺术与摄影："><a href="#艺术与摄影：" class="headerlink" title="艺术与摄影："></a>艺术与摄影：</h2><h3 id="1-在所有的风景里-我最喜欢你"><a href="#1-在所有的风景里-我最喜欢你" class="headerlink" title="1. 在所有的风景里 我最喜欢你"></a>1. 在所有的风景里 我最喜欢你</h3><h2 id="励志："><a href="#励志：" class="headerlink" title="励志："></a>励志：</h2><h3 id="1-人生永远没有太晚的开始—–摩西奶奶"><a href="#1-人生永远没有太晚的开始—–摩西奶奶" class="headerlink" title="1.人生永远没有太晚的开始—–摩西奶奶"></a>1.人生永远没有太晚的开始—–摩西奶奶</h3><h3 id="2-向死而生：我修的死亡学分—–李开复"><a href="#2-向死而生：我修的死亡学分—–李开复" class="headerlink" title="2. 向死而生：我修的死亡学分—–李开复"></a>2. 向死而生：我修的死亡学分—–李开复</h3><h3 id="3-精进：如何成为一个很厉害的人"><a href="#3-精进：如何成为一个很厉害的人" class="headerlink" title="3. 精进：如何成为一个很厉害的人"></a>3. 精进：如何成为一个很厉害的人</h3><h3 id="4-稀缺：我们是如何陷入贫穷与忙碌的"><a href="#4-稀缺：我们是如何陷入贫穷与忙碌的" class="headerlink" title="4. 稀缺：我们是如何陷入贫穷与忙碌的"></a>4. 稀缺：我们是如何陷入贫穷与忙碌的</h3><h3 id="5-把世界当做朋友—–李笑来"><a href="#5-把世界当做朋友—–李笑来" class="headerlink" title="5. 把世界当做朋友—–李笑来"></a>5. 把世界当做朋友—–李笑来</h3><h3 id="6-新生—–李笑来"><a href="#6-新生—–李笑来" class="headerlink" title="6. 新生—–李笑来"></a>6. 新生—–李笑来</h3><h3 id="7-大学之路—–吴军"><a href="#7-大学之路—–吴军" class="headerlink" title="7. 大学之路—–吴军"></a>7. 大学之路—–吴军</h3><h2 id=""><a href="#" class="headerlink" title=""></a></h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>精选音乐</title>
      <link href="/2020/01/30/jing-xuan-yin-le/"/>
      <url>/2020/01/30/jing-xuan-yin-le/</url>
      
        <content type="html"><![CDATA[<h2 id="2020-1-30"><a href="#2020-1-30" class="headerlink" title="2020-1-30"></a>2020-1-30</h2><h3 id="1-最后的旅行-国语剧情版"><a href="#1-最后的旅行-国语剧情版" class="headerlink" title="1.最后的旅行(国语剧情版)"></a>1.最后的旅行(国语剧情版)</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/d_LaxSu_F3k" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="2-好想你—–Joyce-Chu四叶草"><a href="#2-好想你—–Joyce-Chu四叶草" class="headerlink" title="2.好想你—–Joyce Chu四叶草"></a>2.好想你—–Joyce Chu四叶草</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/fdQgPu3iUYk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="3-”Beauty-And-A-Beat”-Justin-Bieber-Alex-Goot-Kurt-Schneider-Chrissy-Costanza-Cover"><a href="#3-”Beauty-And-A-Beat”-Justin-Bieber-Alex-Goot-Kurt-Schneider-Chrissy-Costanza-Cover" class="headerlink" title="3.”Beauty And A Beat” - Justin Bieber (Alex Goot, Kurt Schneider,  Chrissy Costanza Cover)"></a>3.”Beauty And A Beat” - Justin Bieber (Alex Goot, Kurt Schneider,  Chrissy Costanza Cover)</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/n-BXNXvTvV4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="4-ULTIMATE-BOLLYWOOD-MASHUP-ft-Shirley-Setia"><a href="#4-ULTIMATE-BOLLYWOOD-MASHUP-ft-Shirley-Setia" class="headerlink" title="4.ULTIMATE BOLLYWOOD MASHUP!! ft Shirley Setia"></a>4.ULTIMATE BOLLYWOOD MASHUP!! ft Shirley Setia</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/P6TaYwjP00U" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="5-JY-Jyoshimodoki"><a href="#5-JY-Jyoshimodoki" class="headerlink" title="5.JY - Jyoshimodoki"></a>5.JY - Jyoshimodoki</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/x4G_siIEg_4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="6-歌曲名：蛍，歌手名：藤田麻衣子-ふじた-まいこ"><a href="#6-歌曲名：蛍，歌手名：藤田麻衣子-ふじた-まいこ" class="headerlink" title="6.歌曲名：蛍，歌手名：藤田麻衣子 (ふじた まいこ)"></a>6.歌曲名：蛍，歌手名：藤田麻衣子 (ふじた まいこ)</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/rdTC_DRiVX8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="7-歌曲名：逢うたび好きになって-每次相见就更加喜欢上你"><a href="#7-歌曲名：逢うたび好きになって-每次相见就更加喜欢上你" class="headerlink" title="7.歌曲名：逢うたび好きになって (每次相见就更加喜欢上你)"></a>7.歌曲名：逢うたび好きになって (每次相见就更加喜欢上你)</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/KWi40VqL_Nc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="8-曾咏熙-feat-刘雨昕-amp-张悠然-《穷得只剩音乐》官方MV"><a href="#8-曾咏熙-feat-刘雨昕-amp-张悠然-《穷得只剩音乐》官方MV" class="headerlink" title="8.曾咏熙 feat. 刘雨昕&amp;张悠然 《穷得只剩音乐》官方MV"></a>8.曾咏熙 feat. 刘雨昕&amp;张悠然 《穷得只剩音乐》官方MV</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/VJobnACNmEM" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="9-《春分》音阙诗听-王梓钰-二十四节气系列歌曲"><a href="#9-《春分》音阙诗听-王梓钰-二十四节气系列歌曲" class="headerlink" title="9.《春分》音阙诗听/王梓钰 二十四节气系列歌曲"></a>9.《春分》音阙诗听/王梓钰 二十四节气系列歌曲</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/NbSnecTTRSA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><h3 id="10-《芒种》音阙诗听-赵方婧（录音室版）"><a href="#10-《芒种》音阙诗听-赵方婧（录音室版）" class="headerlink" title="10.《芒种》音阙诗听/赵方婧（录音室版）"></a>10.《芒种》音阙诗听/赵方婧（录音室版）</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/eoar4WDRSHk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>备忘录</title>
      <link href="/2020/01/14/bei-wang-lu/"/>
      <url>/2020/01/14/bei-wang-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="1-2020-01-28——01-31"><a href="#1-2020-01-28——01-31" class="headerlink" title="1.2020-01-28——01-31"></a>1.2020-01-28——01-31</h2><ol><li>Java的前端知识</li><li>日语的知识</li><li>Linux的知识</li><li>爬虫的知识</li></ol><h2 id="2-2020-02-03————02-08"><a href="#2-2020-02-03————02-08" class="headerlink" title="2. 2020-02-03————02-08"></a>2. 2020-02-03————02-08</h2><ol><li>Java前端知识</li><li>日语的知识</li><li>爬虫的知识</li><li>读高效能人士的七个习惯</li><li>git的知识</li><li>github的知识</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>笔记</title>
      <link href="/2019/12/22/bi-ji/"/>
      <url>/2019/12/22/bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="记性不好，只能写点"><a href="#记性不好，只能写点" class="headerlink" title="记性不好，只能写点"></a>记性不好，只能写点</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=494482233&amp;auto=1&amp;height=66"></iframe><h2 id="1-2019-12-24"><a href="#1-2019-12-24" class="headerlink" title="1.2019-12-24"></a>1.2019-12-24</h2><h3 id="写文章，发布文章"><a href="#写文章，发布文章" class="headerlink" title="写文章，发布文章"></a>写文章，发布文章</h3><p>​    首先，进入自己的博客根目录下，(我自己的在 <strong>F:\blog\wxhygrBlog</strong>)，鼠标右击，打开Git Bash Here，安装扩展<code>npm i hexo-deployer-git</code>     接着输入 <code>hexo new post "自己定义"</code>，新建文章，会在\source_posts目录下，多一个文件夹和一个.md文件，在.md文件中书写内容，图片存放在文件夹(hexo clean 清除缓存)</p><ol><li>windows系统，下个Typora比较好</li><li>在git中输入 <code>hexo g</code>，生成静态网页</li><li>输入<code>hexo s</code>，进行本地预览效果，访问localhost:端口号 ，之后ctrl+c 退出</li><li>最后输入<code>hexo d</code> 上传到GitHub，就ok了</li></ol><h3 id="文章中添加网易云音乐"><a href="#文章中添加网易云音乐" class="headerlink" title="文章中添加网易云音乐"></a>文章中添加网易云音乐</h3><p>​    先打开网易云网页版，选择想听的歌曲，选择生成外链，直接复制html下的代码，复制到文章中</p><h2 id="2-2020-01-12"><a href="#2-2020-01-12" class="headerlink" title="2.2020-01-12"></a>2.2020-01-12</h2><h3 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h3><ol><li>去注册小程序    订阅号(大部分是，利于传达资讯)，服务号(提供服务)，企业号</li><li>微信会提供小程序开发工具和界面，需要下载</li><li>学习html5,css3和JavaScript(未完)</li></ol><h2 id="3-2020-1-28"><a href="#3-2020-1-28" class="headerlink" title="3.2020-1-28"></a>3.2020-1-28</h2><h3 id="博客hexo出现error：spawn-failed错误"><a href="#博客hexo出现error：spawn-failed错误" class="headerlink" title="博客hexo出现error：spawn failed错误"></a>博客hexo出现error：spawn failed错误</h3><p>通过hexo d无法部署：</p><ol><li>在存放.ssh key的目录下新建config文件——本人电脑—–c/用户/86184/.ssh</li></ol><blockquote><p>.ssh文件中包含：</p><blockquote><p>id_rsa</p><p>id_rsa.pub</p><p>known_hosts</p></blockquote></blockquote><ol start="2"><li><p>在config文件中填入一下内容</p><pre><code>Host github.comUser 你GitHub的邮箱Hostname ssh.github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsaPort 443</code></pre></li><li><p>用 <code>ssh -T git@github.com</code>命令测试能否连接</p></li><li><p>在博客的根目录，打开_config.yml配置文件</p><pre><code># 将repo: https://github.com/yourname/yourname.github.io.git写成下面的deploy:  type: git  repo: git@github.com:yourname/yourname.github.io.git  branch: master</code></pre></li><li><p>hexo clean—–hexo g——hexo d部署</p></li></ol><h3 id="网易云音乐MP3外链，地址下载方法"><a href="#网易云音乐MP3外链，地址下载方法" class="headerlink" title="网易云音乐MP3外链，地址下载方法"></a>网易云音乐MP3外链，地址下载方法</h3><blockquote><p>第一步打开网易云音乐，随便找到一首歌，播放，复制网址的ID，</p><p>例如：杨钰莹的心雨，网址是：</p><p><a href="http://music.163.com/#/song?id=317151" target="_blank" rel="noopener">http://music.163.com/#/song?id=317151</a></p><p>很明显，ID是317151</p><p>那么，这首歌的真实地址就是：</p><p><a href="http://music.163.com/song/media/outer/url?id=317151.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=317151.mp3</a></p><p>这个地址不会失效的；</p><p><strong>这就得到一个下载公式：</strong></p><p><strong><a href="http://music.163.com/song/media/outer/url?id=ID数字.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=ID数字.mp3</a></strong></p><p><strong>把上面ID数字换成网易云播放页面的id即可。</strong></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 日常经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-2020时间线</title>
      <link href="/2019/12/22/2019-2020-shi-jian-xian/"/>
      <url>/2019/12/22/2019-2020-shi-jian-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="学习过程中的一些记录"><a href="#学习过程中的一些记录" class="headerlink" title="学习过程中的一些记录"></a>学习过程中的一些记录</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=445124428&amp;auto=1&amp;height=66"></iframe><h2 id="致自己"><a href="#致自己" class="headerlink" title="致自己"></a>致自己</h2><p>记录每天的学习动态，坚持下去，奥利给！！！</p><h2 id="1-2019-12-22"><a href="#1-2019-12-22" class="headerlink" title="1.2019-12-22"></a>1.2019-12-22</h2><ol><li><p>日文教学(初级)（71）</p></li><li><p>Python基础第二天内容</p><p>​    1. 运算符包括：算数运算符，赋值运算符，复合赋值运算符，比较运算符，逻辑运算符                                        </p></li></ol><h2 id="2-2019-12-23"><a href="#2-2019-12-23" class="headerlink" title="2.2019-12-23"></a>2.2019-12-23</h2><ol><li>日文教学(初级)（72） </li><li>Python基础第三天内容：<code>if    elif else</code>    嵌套用法，三目运算符    </li></ol><h2 id="3-2019-12-24"><a href="#3-2019-12-24" class="headerlink" title="3.2019-12-24"></a>3.2019-12-24</h2><ol><li>Python基础第四天内容：while循环，for循环，while…else    for…else    /    break，continue                                </li></ol><h2 id="4-2019-12-25"><a href="#4-2019-12-25" class="headerlink" title="4.2019-12-25"></a>4.2019-12-25</h2><ol><li>Python基础第五天内容：切片，字符串查找，修改，删除，对齐，判断</li></ol><h2 id="5-2019-12-26"><a href="#5-2019-12-26" class="headerlink" title="5.2019-12-26"></a>5.2019-12-26</h2><ol><li>Python基础第六天内容：列表查改删等，列表遍历，列表嵌套    元组的一些操作</li></ol><h2 id="6-2019-12-28"><a href="#6-2019-12-28" class="headerlink" title="6.2019-12-28"></a>6.2019-12-28</h2><ol><li>Python基础第七天内容：字典的一些操作，字典的循环遍历，集合的一些操作，增加，删除，查找                            </li></ol><h2 id="7-2019-12-29"><a href="#7-2019-12-29" class="headerlink" title="7.2019-12-29"></a>7.2019-12-29</h2><ol><li>Python基础第八天内容：公共操作之运算符，公共方法<code>len del max min range enumerate</code> ，容器类型转换，列表推导式，字典推导式，集合推导式                                    </li></ol><h2 id="8-2019-12-31"><a href="#8-2019-12-31" class="headerlink" title="8.2019-12-31"></a>8.2019-12-31</h2><ol><li>Python基础第九，十天内容：函数，元组，字典拆包</li></ol><h2 id="9-2020-01-02"><a href="#9-2020-01-02" class="headerlink" title="9.2020-01-02"></a>9.2020-01-02</h2><ol><li>Python基础第十一天内容：学员管理系统</li></ol><h2 id="10-2020-01-03"><a href="#10-2020-01-03" class="headerlink" title="10.2020-01-03"></a>10.2020-01-03</h2><ol><li>Python基础第十二，十三天内容：递归，lambda，高阶函数：abs round，内置高阶函数：map reduce filter， 文件，文件夹操作                                                                                            </li></ol><h2 id="11-2020-01-05"><a href="#11-2020-01-05" class="headerlink" title="11.2020-01-05"></a>11.2020-01-05</h2><ol><li>Python基础第十四，十五天内容：类和对象，魔法方法：<code>init    str    del</code>，烤地瓜需求，搬家具需求，super()，    私有属性， 继承：单继承，多继承，多层继承                                                                                                          </li></ol><h2 id="12-2020-01-06"><a href="#12-2020-01-06" class="headerlink" title="12.2020-01-06"></a>12.2020-01-06</h2><ol><li>Python基础第十六，十七天内容：多态，类属性和实例属性，类方法和静态方法，异常</li></ol><h2 id="13-2020-01-09"><a href="#13-2020-01-09" class="headerlink" title="13.2020-01-09"></a>13.2020-01-09</h2><ol><li>Python基础第十八，十九天内容(B站黑马19天内容)：模块，包，需求 管理系统                                                                                    </li></ol><h2 id="14-2020-01-13"><a href="#14-2020-01-13" class="headerlink" title="14.2020-01-13"></a>14.2020-01-13</h2><p>[零基础学python语言(北京理工大学)搬运自] [<a href="http://www.icourse163.org/learn/BIT-1002058035#/learn/content]" target="_blank" rel="noopener">http://www.icourse163.org/learn/BIT-1002058035#/learn/content]</a></p><p><code>IPO</code>模式：输入 处理 输出</p><p>问题的计算特性：                                                                                        —》<strong>输入</strong></p><p>​                            <strong>现实生活中的问题</strong>—》<strong>抽象出可计算部分</strong>—》<strong>计算特性</strong>  —》<strong>处理</strong></p><p>​                                                                                                                     —》<strong>输出</strong></p><h3 id="温度转换程序："><a href="#温度转换程序：" class="headerlink" title="温度转换程序："></a>温度转换程序：</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># TempConvert.py</span>val <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入带温度表示符号的温度值(例如：32C)：'</span><span class="token punctuation">)</span><span class="token keyword">if</span> val<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    f <span class="token operator">=</span> <span class="token number">1.8</span> <span class="token operator">*</span> float<span class="token punctuation">(</span>val<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">32</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'转换后的温度为：%.2fF'</span><span class="token operator">%</span>f<span class="token punctuation">)</span><span class="token keyword">elif</span> val<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'F'</span><span class="token punctuation">,</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    c <span class="token operator">=</span> <span class="token punctuation">(</span>float<span class="token punctuation">(</span>val<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1.8</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'转换后的温度为： %.2fC'</span><span class="token operator">%</span>c<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误'</span><span class="token punctuation">)</span></code></pre><h3 id="蟒蛇实例："><a href="#蟒蛇实例：" class="headerlink" title="蟒蛇实例："></a>蟒蛇实例：</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> turtle<span class="token keyword">def</span> <span class="token function">drawSnake</span><span class="token punctuation">(</span>rad<span class="token punctuation">,</span> angle<span class="token punctuation">,</span> len<span class="token punctuation">,</span> neckrad<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">:</span>        turtle<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>rad<span class="token punctuation">,</span> angle<span class="token punctuation">)</span>        turtle<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token operator">-</span>rad<span class="token punctuation">,</span> angle<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>rad<span class="token punctuation">,</span> angle <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span>rad<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>neckrad <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span>rad <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    turtle<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">1300</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    pythonsize <span class="token operator">=</span> <span class="token number">30</span>    turtle<span class="token punctuation">.</span>pensize <span class="token operator">=</span> <span class="token punctuation">(</span>pythonsize<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>pencolor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>seth<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">)</span>    drawSnake<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> pythonsize <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># month.py</span>months <span class="token operator">=</span> <span class="token string">'JanFebMarAprMayJunJulAugSepOctNovDec'</span>n <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入月份数(1-12):'</span><span class="token punctuation">)</span>pos <span class="token operator">=</span> <span class="token punctuation">(</span>int<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span>monthAbbrev <span class="token operator">=</span> months<span class="token punctuation">[</span>pos<span class="token punctuation">:</span>pos <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'月份简写是'</span> <span class="token operator">+</span> monthAbbrev <span class="token operator">+</span> <span class="token string">'.'</span><span class="token punctuation">)</span></code></pre><p><strong>Python语言的类型：数字类型，字符串类型，元组类型，列表类型，文件类型，字典类型</strong></p><ol><li><p>数字类型：整数类型# pow(x,y) x的y次方，浮点数类型，复数类型# complex(4.5) = 4.5 + 0j</p></li><li><p>字符串类型：<code>str</code>    \n 表示换行</p><pre><code># 字符串操作|.upper()|.lower()|.capitlize()|.strip()|.split()|.isdigit()|.find()|.replace()||:---|:--:|:--:|:--:|:--:|:--:|:--:|--:||大写|小写|首字母大写|去两边|分割|判断是否数字类型|查找|替换</code></pre></li><li><p>元组类型：()元组定义后不能更改，也不能删除</p></li><li><p>列表类型：[ ]列表的操作</p><pre><code># 列表操作|.append(x)|.sort()|.reverse()|.index()|.insert(i,x)|.count(x)|.remove(x)|.pop(i)||:---|:--:|:--:|:--:|:--:|:--:|:--:|--:||添加|排序|反转|索引|插入|数量|移除|替换</code></pre><p>math库和random库 ,22π的计算</p><p>程序的基本结构：简单分支，多分支</p><p>异常处理：try…except    三者最大实例分析</p><p>循环    <strong><code>eval()</code> 函数用来执行一个字符串表达式，并返回表达式的值</strong></p><p>布尔操作符：    and    or    not</p><p>函数</p></li></ol><p><strong>打印树</strong>：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> turtle <span class="token keyword">import</span> Turtle<span class="token keyword">def</span> <span class="token function">tree</span><span class="token punctuation">(</span>plist<span class="token punctuation">,</span> l<span class="token punctuation">,</span> a<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    :param plist:存放一组turtle列表的对象    :param l:树枝的长度    :param a:画笔调整角度    :param f:下一层树枝叉长度和上一层的比例    :return:    """</span>    <span class="token keyword">if</span> l <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">:</span>        lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> p <span class="token keyword">in</span> plist<span class="token punctuation">:</span>            p<span class="token punctuation">.</span>forward<span class="token punctuation">(</span>l<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 沿着当前的方向画画</span>            q <span class="token operator">=</span> p<span class="token punctuation">.</span>clone<span class="token punctuation">(</span><span class="token punctuation">)</span>            p<span class="token punctuation">.</span>left<span class="token punctuation">(</span>a<span class="token punctuation">)</span>            q<span class="token punctuation">.</span>right<span class="token punctuation">(</span>a<span class="token punctuation">)</span>            lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span>p<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将元素增加到列表的最后</span>            lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span>q<span class="token punctuation">)</span>        tree<span class="token punctuation">(</span>lst<span class="token punctuation">,</span> l <span class="token operator">*</span> f<span class="token punctuation">,</span> a<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> Turtle<span class="token punctuation">(</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'green'</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>hideturtle<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># p.getscreen().tracer(30, 0)</span>    p<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 调整画笔</span>    <span class="token comment" spellcheck="true"># 这三条语句是一个组合相当于先把笔收起来再移动到指定位置，再把笔放下开始画</span>    <span class="token comment" spellcheck="true"># 否则turtle一移动就会自动的把线画出来</span>    p<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> tree<span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">0.6375</span><span class="token punctuation">)</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><ol start="5"><li><p>文件：读，写，定位</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 遍历文件模板</span><span class="token comment" spellcheck="true"># 通用代码框架</span>file <span class="token operator">=</span> open<span class="token punctuation">(</span>someeFile<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> file<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 处理一行文件内容</span>file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 简化代码框架</span>file <span class="token operator">=</span> open<span class="token punctuation">(</span>someeFile<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> file<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 处理一行文件内容</span>file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li><li><p>字典类型：{键：值 }</p><p>计算思维</p><p>自顶向下的设计：大问题 ===》》》分解为多个小问题</p><p>自底向上的设计：软件测试</p><ol><li>小规模程序：直接运行</li><li>中等规模：底层开始，逐步上升===》》》运行基本函数，测试整体函数</li><li>较大规模：高级软件测试方法    </li></ol><p>常见的软件开发模式：瀑布模式    螺旋模式    快速原型模式    喷泉模式    混合模式    敏捷开发模式</p><p><strong>敏捷开发模式</strong>：自低向上    逐步有序    遵循软件客观规律    迭代增量开发</p><p>面向过程的程序设计</p><p>面向对象的程序设计：状态和行为</p><p>类的定义：</p><ol><li><p><code>__init__</code>构造函数：初始化对象</p></li><li><p><code>__del__</code>析构函数：销毁对象</p></li></ol><p>面向对象的特点：封装，继承和多态</p><ol><li>封装：抽象对象，打包数据和操作</li><li>继承：一个类可以借用另一个类的行为</li><li>多态：对象怎么回应消息，同一函数名启用不同方法，活性</li></ol><p>图素法和像素法的区别：</p><ol><li>图形 — 矢量图(放大不变)</li><li>图像 — 标量图                                                                        </li></ol></li></ol><h3 id="Python图形工具包：Tkinter-简称tk接口-Graphics-turtle"><a href="#Python图形工具包：Tkinter-简称tk接口-Graphics-turtle" class="headerlink" title="Python图形工具包：Tkinter(简称tk接口)    Graphics    turtle"></a>Python图形工具包：Tkinter(简称tk接口)    Graphics    turtle</h3><p><strong>交互式图形用户接口</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 简单图形编程</span><span class="token comment" spellcheck="true"># 第一步：导入图形模块</span><span class="token keyword">import</span> graphics<span class="token comment" spellcheck="true"># 第二步：创建图形窗口</span>win <span class="token operator">=</span> graphics<span class="token punctuation">.</span>GraphWin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 第三步：关闭窗口</span>win<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 更简洁的代码方式</span><span class="token keyword">from</span> graphics <span class="token keyword">import</span> <span class="token operator">*</span>win <span class="token operator">=</span> GraphWin<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>图形窗口：</p><ol><li>点(像素)的集合</li><li>GraphWin对象尺寸默认值    高200像素，宽200像素                                </li></ol><p>点对象Point：</p><ol><li>图形模块中最简单的对象</li><li>参考坐标系定位</li><li>坐标(x,y)                                                </li></ol><p>图形对象的概念：</p><ol><li>类定义了实例包含的属性和方法</li><li>两个独立的Point实例：p1和p2</li><li>x,y值</li><li>getX()和draw()</li><li>不同的实例可以有不同的属性值                                                                                                                                                                                </li></ol><p><strong>画圆</strong>：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> graphics <span class="token keyword">import</span> <span class="token operator">*</span>circ <span class="token operator">=</span> Circle<span class="token punctuation">(</span>Point<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 半径30</span>win <span class="token operator">=</span> GraphWin<span class="token punctuation">(</span><span class="token punctuation">)</span>circ<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>win<span class="token punctuation">)</span></code></pre><p><strong>画脸</strong>：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> graphics <span class="token keyword">import</span> <span class="token operator">*</span>win <span class="token operator">=</span> GraphWin<span class="token punctuation">(</span><span class="token punctuation">)</span>face <span class="token operator">=</span> Circle<span class="token punctuation">(</span>Point<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>leftEye <span class="token operator">=</span> Circle<span class="token punctuation">(</span>Point<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>leftEye<span class="token punctuation">.</span>setFill<span class="token punctuation">(</span><span class="token string">'yellow'</span><span class="token punctuation">)</span>leftEye<span class="token punctuation">.</span>setOutline<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">)</span>rightEye <span class="token operator">=</span> Circle<span class="token punctuation">(</span>Point<span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>rightEye<span class="token punctuation">.</span>setFill<span class="token punctuation">(</span><span class="token string">'yellow'</span><span class="token punctuation">)</span>rightEye<span class="token punctuation">.</span>setOutline<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">)</span>mouth <span class="token operator">=</span> Line<span class="token punctuation">(</span>Point<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Point<span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">)</span>face<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>win<span class="token punctuation">)</span>mouth<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>win<span class="token punctuation">)</span>leftEye<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>win<span class="token punctuation">)</span>rightEye<span class="token punctuation">.</span>draw<span class="token punctuation">(</span>win<span class="token punctuation">)</span></code></pre><h3 id="Graphics模块"><a href="#Graphics模块" class="headerlink" title="Graphics模块"></a>Graphics模块</h3><ol><li>隐藏了底层事件的处理机制</li><li>获得用户在窗口中的输入</li><li>捕捉鼠标点击</li><li>处理文本输入</li><li>Text对象：steText()和getText()</li><li>Entry对象：steText()和getText()    内容可以被用户修改    </li></ol><h3 id="Tkinter"><a href="#Tkinter" class="headerlink" title="Tkinter"></a>Tkinter</h3><p>Tkinter创建GUI程序的基本步骤：</p><ol><li>第一步：导入Tkinter模块</li><li>第二步：创建GUI应用程序的主窗口</li><li>第三步：添加控件或GUI应用程序</li><li>第四步：进入主事件循环，等待响应用户触发事件</li></ol><p><strong>共同属性</strong>：</p><ol><li>Dimensions—–尺寸</li><li>Colors—–颜色</li><li>Fonts—–字体</li><li>Anchors—–锚</li><li>Relief styles—–浮雕式</li><li>Bitmaps—–显示位图</li><li>Cursors—–光标的外形</li></ol><p><strong>界面布局</strong>：</p><p>Tkinter 三种几何管理方法：</p><ol><li>pack()</li><li>grid()</li><li>place()</li></ol><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span> tk <span class="token operator">=</span> TK<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 此处添加控件代码</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>tk<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 简单GUI示例</span><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span>tk <span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>label <span class="token operator">=</span> Label<span class="token punctuation">(</span>tk<span class="token punctuation">,</span>text <span class="token operator">=</span> <span class="token string">'Welcome to Python Tkinter'</span><span class="token punctuation">)</span>button <span class="token operator">=</span> Button<span class="token punctuation">(</span>tk<span class="token punctuation">,</span>text <span class="token operator">=</span> <span class="token string">'Click Me'</span><span class="token punctuation">)</span>label<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>button<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>tk<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong>图形库的应用方法(参考视频)</strong>：Graphwin对象，图形对象，图形颜色系统    </p><p><strong>Turtle 库(参考视频)</strong>：Python内置图形化模块</p><p>Turtle.py文件—–安装目录的Lib文件夹下</p><p><strong>案例：钟表编写(参考视频)</strong></p><h2 id="15-2020-01-16"><a href="#15-2020-01-16" class="headerlink" title="15.2020-01-16"></a>15.2020-01-16</h2><h3 id="Linux："><a href="#Linux：" class="headerlink" title="Linux："></a>Linux：</h3><p>特点：</p><ol><li>免费</li><li>可移植性</li><li>市场人才丰富</li><li>硬件支持很好</li></ol><p>该选择哪个？–企业篇：</p><ol><li>Centos</li><li>Ubuntu Server</li><li>Debian</li></ol><p>该选择哪个？–个人篇：</p><ol><li>Ubuntu</li><li>Mac</li></ol><p>虚拟机：</p><ol><li><p>[VirtualBox] [下载<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Downloads</a>]—–Ubuntu</p></li><li><p>VMware—–收费，封闭</p></li></ol><p>设备文件分类：</p><ol><li>/dev/hd*IDE 硬盘</li><li>/devsd*SCSI和SATA的硬盘</li><li>/dev/vd*Virtio硬盘</li></ol><p>分区表格式：</p><ol><li>MBR</li><li>GPT</li></ol><p>分区类型：</p><ol><li>主分区 Primary </li><li>扩展分区 Extended</li><li>逻辑分区 Logical</li></ol><p>分区方案(一) –生产环境版</p><ol><li>/分区</li><li>/data 分区</li><li>/home 分区</li><li>交换(swap)分区</li></ol><p>分区方案(二) –个人电脑版</p><ol><li>/分区</li><li>/home分区</li><li>交换(swap)分区</li></ol><p>常见的文件系统：</p><ol><li>ext3 (Third extended filesystem)</li><li>ext4 (Fourth extended filesystem)</li><li>HFS+ (Mac OS Extended)</li><li>vfat (File Allocation Table)</li><li>NTFS (New Technology File System)</li></ol><p>桌面环境选择：</p><ol><li>GNOME</li><li>KDE</li><li>Unity</li></ol><p>LTS(long-term-support)</p><p>iso文件的中国镜像</p><p>[VirtualBox 安装教程：]  [window <a href="https://blog.csdn.net/u012732259/article/details/70172704" target="_blank" rel="noopener">https://blog.csdn.net/u012732259/article/details/70172704</a>]</p><p>系统安装后的基本配置：</p><ol><li>换中国软件源</li><li>使用收藏夹</li><li>删除没用的内容 ，搜索sof</li><li>屏幕分辨率 终端：<code>sudo apt-get install virtualbox-guest-dkms</code></li><li>安装Chrome&amp;搜狗输入法，安装完输入法，去终端删除系统自带的 <code>sudo apt-get remove fcitx</code></li></ol><p>HTML定义网页的框架结构，CSS描述HTML元素的样式(比如大小，颜色，位置，动画效果等)</p><p>浏览器会根据HTML元素描述一个默认的样式，这个样式很简陋，表现力很差。</p><p>所以必须通过CSS控制页面的外观和布局</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>CSS语法：选择器—–属性：值</p><p>id选择器</p><p>类选择器    比如：.key{ color : blue;} </p><p>class = “key”</p> <p></p><p>margin(外边距)</p><p>padding(内边距)</p><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><p>是一个运行在浏览器中的，轻量级的，面向对象的解释编程语言，我们日常访问的HTML页面都使用它</p><p>把代码嵌入到HTML，浏览器执行它，可以用来设置网页，与用户和后端交互，改变网页展示结构，改变网页展示样式，</p><p>实现动画效果，获取数据，处理数据等</p><h3 id="ES6-ECMAScript-6"><a href="#ES6-ECMAScript-6" class="headerlink" title="ES6(ECMAScript 6)"></a>ES6(ECMAScript 6)</h3><p>是JavaScript的下一代版本，在2015年6月正式标准不化，它的目标是使得JavaScript语言可以用来编写复杂的大型的应用</p><p>程序，成为企业级开发语言</p><p>CSS预处理器：</p><ol><li>Sass</li><li>Less</li></ol><h3 id="Linux刘伟视频教学-油管"><a href="#Linux刘伟视频教学-油管" class="headerlink" title="Linux刘伟视频教学(油管)"></a>Linux刘伟视频教学(油管)</h3><p>[刘伟的博客]  [<a href="https://darrenliuwei.com/" target="_blank" rel="noopener">https://darrenliuwei.com/</a>]</p><p>Linux基本命令：</p><p>ls:</p><ol><li>ls 或者 l 显示当前文件夹下的文件信息</li><li>ls -a 显示所有文件，包括以”.”开头的隐藏文件</li><li>ls -l 显示详细信息</li><li>ll 或 ls -al 显示所有文件，包含隐藏文件的详细信息</li></ol><p>cd:</p><ol><li>cd 目录名 切换到对应目录下</li><li>cd .. 或者 cd ../ 切换到上级目录</li><li>cd - 切换到上次浏览的目录并打印当前工作目录路径</li><li>cd / 切换到根目录</li></ol><p>pwd:</p><ol><li>pwd 打印当前工作目录路径</li></ol><p>touch：touch 文件名 修改文件时间属性，若文件名不存在，则新建一个新的同名文件</p><p>cp:</p><ol><li>cp 文件或者目录 主要用于复制文件或目录</li><li>cp -p 保留源文件或目录的属性 (比如时间属性)</li><li>cp -r 复制目录及目录内的所有内容    cp -rp</li><li>cp -v 显示命令执行的过程</li></ol><p>mv:</p><ol><li>mv 源文件或目录  目录文件或目录  移动或重命名文件或目录</li></ol><p>mkdir:</p><ol><li>mkdir 目录名 删除空目录，mkdir是”make directory”的缩写词</li><li>mkdir -p 确保目录名称存在，不存在的就新建一个</li><li>mkdir -v 显示命令执行的过程</li></ol><p>rmdir:</p><ol><li>rmdir 目录名 删除空目录，rmdir是”remove directory”的缩写词</li><li>rmdir -p 删除指定目录后，若该目录的上一级目录已变成空目录，则将其一并删除</li><li>rmdir -v 显示命令执行的过程</li></ol><p>rm:</p><ol><li>rm 文件名或目录名 删除一个文件或者目录，rm是”remove”的缩写词</li><li>rm -r 强制删除目录及目录下的所有文件</li><li>rm -i 删除前逐一询问确认</li><li>rm -v 显示命令执行的过程</li></ol><p>locate:</p><ol><li>locate 要搜索的文件或目录名 非实时的从数据库里快速搜索文件或目录，若需要更新数据库，可以使用命令updatedb</li><li>locate -V 显示命令的版本信息</li></ol><p>man:</p><ol><li>man 命令名 可以查看命令的帮助信息</li></ol><p>help:</p><ol><li>help 命令名 可以查看命令的帮助信息</li></ol><p>文件权限chmod</p><ol><li>chmod 文件或目录名 修改文件或目录的权限信息</li><li>用法：chmod          [u|g|o|a]         [=|+|-]         文件名     # a 所有</li><li>-后三个 user      后三个 group     后三个  other</li><li>r=4=读取属性     w=2=写入属性     x=1=执行属性</li></ol><h2 id="16-2020-01-30"><a href="#16-2020-01-30" class="headerlink" title="16.2020-01-30"></a>16.2020-01-30</h2><p>移动端查看博客，仍然会出现一些小问题</p><h2 id="17-2020-02-01"><a href="#17-2020-02-01" class="headerlink" title="17.2020-02-01"></a>17.2020-02-01</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 其它语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/17/hello-world/"/>
      <url>/2019/12/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
